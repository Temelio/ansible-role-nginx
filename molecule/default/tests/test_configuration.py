"""
Role tests
"""

import os

from testinfra.utils.ansible_runner import AnsibleRunner

testinfra_hosts = AnsibleRunner(
    os.environ['MOLECULE_INVENTORY_FILE']).get_hosts('all')


def test_server_configuration_with_location(host):
    """
    Test server configuration file structure with location
    """

    config_file = '/etc/nginx/sites-available/foobar.conf'

    expected_content = [
        u'#',
        u'# Ansible managed: Do NOT edit this file manually!',
        u'#',
        u'server {',
        u'    listen 80;',
        u'    root /var/www/foo;',
        u'    server_name localhost;',
        u'    index index.html;',
        u'    location /foo {',
        u'        try_files $uri =404;',
        u'        root /var/www/foo;',
        u'    }',
        u'    location /bar {',
        u'        try_files $uri =404;',
        u'        root /var/www/bar;',
        u'    }',
        u'}'
    ]

    current_content = filter(
        None,
        host.file(config_file).content_string.split('\n'))

    assert current_content == expected_content


def test_server_configuration_without_location(host):
    """
    Test server configuration file structure without location
    """

    config_file = '/etc/nginx/sites-available/bar.conf'

    expected_content = [
        u'#',
        u'# Ansible managed: Do NOT edit this file manually!',
        u'#',
        u'server {',
        u'    listen 80;',
        u'    root /var/www/foo;',
        u'    server_name localhost;',
        u'    index index.html;',
        u'}'
    ]

    current_content = filter(
        None,
        host.file(config_file).content_string.split('\n'))

    assert current_content == expected_content


def test_upstream_configuration(host):
    """
    Test upstream configuration file structure
    """

    config_file = '/etc/nginx/sites-available/upstream-foo.conf'

    expected_content = [
        u'#',
        u'# Ansible managed: Do NOT edit this file manually!',
        u'#',
        u'upstream foo {',
        u'    server 127.0.0.1:8080;',
        u'}'
    ]

    current_content = filter(
        None,
        host.file(config_file).content_string.split('\n'))

    assert current_content == expected_content


def test_map_configuration(host):
    """
    Test map configuration file structure
    """

    config_file = '/etc/nginx/sites-available/map-foo.conf'

    expected_content = [
        u'#',
        u'# Ansible managed: Do NOT edit this file manually!',
        u'#',
        u'map $uri $new_uri {',
        u'    /foo /bar;',
        u'}'
    ]

    current_content = filter(
        None,
        host.file(config_file).content_string.split('\n'))

    assert current_content == expected_content
