---
ansible:
  extra_vars:
    ansible_python_interpreter: '/usr/bin/env python2.7'
    no_log: true
  raw_env_vars:
    ANSIBLE_NOCOWS: 1


dependency:
  name: 'galaxy'
driver:
  name: 'docker'
lint:
  name: 'yamllint'
platforms:
  - name: "nginx-docker-stretch"
    image: 'minimum2scp/systemd-stretch:latest'
    command: '/sbin/init'
    cap_add:
      - 'SYS_PTRACE'
    privileged: True
  - name: "nginx-docker-xenial"
    image: 'solita/ubuntu-systemd:16.04'
    command: '/sbin/init'
    cap_add:
      - 'SYS_PTRACE'
    privileged: True
  - name: "nginx-docker-trusty"
    image: 'ubuntu:trusty'
    cap_add:
      - 'SYS_PTRACE'
    privileged: True
  - name: "nginx-docker-bionic"
    image: 'solita/ubuntu-systemd:18.04'
    command: '/sbin/init'
    cap_add:
      - 'SYS_PTRACE'
    privileged: True
provisioner:
  name: 'ansible'
  lint:
    name: 'ansible-lint'
  inventory:
    group_vars:
      all:
        nginx_servers:
          - name: 'foobar'
            is_enabled: True
            options: |
              listen 80;
              root /var/www/foo;
              server_name localhost;
              index index.html;
            locations:
              - target: '/foo'
                options: |
                  try_files $$uri =404;
                  root /var/www/foo;
              - target: '/bar'
                options: |
                  try_files $$uri =404;
                  root /var/www/bar;
          - name: 'bar'
            is_enabled: True
            options: |
              listen 80;
              root /var/www/foo;
              server_name localhost;
              index index.html;
        nginx_upstreams:
          - name: 'foo'
            is_enabled: True
            options: |
              server 127.0.0.1:8080;
        nginx_maps:
          - name: 'foo'
            is_enabled: True
            target: '$$uri $$new_uri'
            options: |
              /foo /bar;
    host_vars: {}
scenario:
  name: 'default'
verifier:
  name: 'testinfra'
  additional_files_or_dirs:
    - '../../tests'
  lint:
    name: 'flake8'
  options:
    sudo: True
