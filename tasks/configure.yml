---

- name: 'Delete default configuration files'
  file:
    path: "{{ item }}"
    state: 'absent'
  notify: 'HANDLER | Restart Nginx'
  with_items: "{{ nginx_default_config_files }}"
  when: "nginx_delete_default_config_files"


- name: 'Create server configuration folders'
  file:
    path: "{{ item }}"
    owner: "{{ nginx_config_dir_owner }}"
    group: "{{ nginx_config_dir_group }}"
    mode: "{{ nginx_config_dir_mode }}"
    state: 'directory'
  with_items:
    - "{{ nginx_sites_available_path }}"
    - "{{ nginx_sites_enabled_path }}"


- name: 'Manage main configuration file'
  template:
    src: "{{ role_path }}/templates/nginx.conf.j2"
    dest: "{{ nginx_main_config_file_path }}"
    owner: "{{ nginx_config_files_owner }}"
    group: "{{ nginx_config_files_group }}"
    mode: "{{ nginx_config_files_mode }}"
  notify: 'HANDLER | Restart Nginx'


- name: 'Manage servers configuration'
  template:
    src: "{{ role_path }}/templates/server.conf.j2"
    dest: "{{ nginx_sites_available_path }}/{{ item.name }}.conf"
    owner: "{{ nginx_config_files_owner }}"
    group: "{{ nginx_config_files_group }}"
    mode: "{{ nginx_config_files_mode }}"
  notify: 'HANDLER | Restart Nginx'
  with_items: "{{ nginx_servers }}"


- name: 'Manage servers activation'
  file:
    src: "{{ nginx_sites_available_path }}/{{ item.name }}.conf"
    dest: "{{ nginx_sites_enabled_path }}/{{ item.name }}.conf"
    state: "{{ item.is_enabled | ternary('link', 'absent') }}"
  notify: 'HANDLER | Restart Nginx'
  with_items: "{{ nginx_servers }}"


- name: 'Check if configuration is valid'
  command: 'nginx -t'
  changed_when: False
